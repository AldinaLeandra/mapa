{
    "name": "ushahidi/platform",
    "description": "Ushahidi Platform core and API server",
    "homepage": "http://ushahidi.com/",
    "type": "project",
    "license": "AGPL-3.0",
    "require": {
        "php": ">=7.2 <7.4",
        "abraham/twitteroauth": "^0.5.3",
        "africastalking/africastalking": "^3.0",
        "asm89/stack-cors": "1.2.0",
        "barryvdh/laravel-cors": "^0.11.0",
        "doctrine/cache": "^1.6.2",
        "fideloper/proxy": "~3.3",
        "germanazo/laravel-ckan-api": "^1.0",
        "ircmaxell/password-compat": "^1.0.4",
        "laravel/framework": "5.5.*",
        "laravel/passport": "^4.0",
        "laravel/tinker": "~1.0",
        "lcobucci/jwt": "3.3.1",
        "league/csv": "~7.1@dev",
        "league/flysystem": "~1.0",
        "league/flysystem-aws-s3-v3": "~1.0",
        "league/flysystem-rackspace": "~1.0",
        "netresearch/jsonmapper": "^1.6.0",
        "nexmo/client": "^1.1",
        "predis/predis": "~1.1",
        "ramsey/uuid": "^3.4.1",
        "sentry/sentry-laravel": "^0.8.0",
        "symfony/yaml": "~3.0",
        "symm/gisconverter": "~1.0.5",
        "twilio/sdk": "^5.15",
        "ushahidi/gmail-support": "dev-mzima",
        "ushahidi/kohana-validation": "dev-master",
        "wikimedia/composer-merge-plugin": "^2.0",
        "willdurand/negotiation": "^2.3"
    },
    "require-dev": {
        "behat/behat": "^3.3",
        "filp/whoops": "~2.0",
        "fzaninotto/faker": "~1.4",
        "guzzlehttp/guzzle": "~6.3.2",
        "heroku/heroku-buildpack-php": "dev-master",
        "laravel/homestead": "^11.0",
        "leanphp/phpspec-code-coverage": "~3.1",
        "mockery/mockery": "^1.0",
        "php-mock/php-mock-mockery": "^1.2",
        "phpspec/phpspec": "~3.0",
        "phpunit/dbunit": "^1.4",
        "phpunit/phpunit": "^5.7|^6.0",
        "satooshi/php-coveralls": "^2.0@dev",
        "sebastianfeldmann/captainhook": "^2.0",
        "squizlabs/php_codesniffer": "~3.0",
        "symfony/thanks": "^1.0"
    },
    "suggest": {
        "ext-imap": "Needed for email data source",
        "ext-redis": "Needed for Redis based queues or cache",
        "ext-memcached": "Needed for Memcache based cache"
    },
    "config": {
        "bin-dir": "bin/",
        "github-protocols": [
            "https",
            "http",
            "git"
        ],
        "optimize-autoloader": true,
        "preferred-install": "dist",
        "sort-packages": true,
        "allow-plugins": {
            "symfony/thanks": true,
            "kylekatarnls/update-helper": true,
            "wikimedia/composer-merge-plugin": true
        }
    },
    "autoload": {
        "classmap": [
            "database/seeds",
            "database/factories"
        ],
        "psr-4": {
            "Ushahidi\\": "src/Ushahidi",
            "App\\": "app/"
        },
        "files": []
    },
    "autoload-dev": {
        "psr-4": {
            "Tests\\": "tests/",
            "Ushahidi\\Tests\\": "tests/"
        }
    },
    "extra": {
        "laravel": {
            "dont-discover": []
        },
        "merge-plugin": {
            "include": [
                "src/Ushahidi/*/composer.json",
                "src/Ushahidi/**/*/composer.json"
            ],
            "require": [],
            "recurse": true,
            "replace": false,
            "ignore-duplicates": false,
            "merge-dev": true,
            "merge-extra": true,
            "merge-extra-deep": false,
            "merge-scripts": true
        }
    },
    "scripts": {
        "post-root-package-install": [
            "@php -r \"file_exists('.env') || copy('.env.example', '.env');\""
        ],
        "post-create-project-cmd": [
            "@php artisan key:generate"
        ],
        "post-autoload-dump": [
            "Illuminate\\Foundation\\ComposerScripts::postAutoloadDump",
            "@php artisan package:discover"
        ],
        "post-install-cmd": [
            "captainhook install -f",
            "@php artisan passport:keys || @php -r \"return 0;\""
        ],
        "compile": [
            "@migrate"
        ],
        "lint": [
            "phpcs --standard=src/ruleset.xml --ignore=./resources/lang/*,./bootstrap/cache/*,./storage/framework/* ./",
            "phpcs --standard=tests/spec/ruleset.xml ./tests/spec/",
            "phpcs --standard=database/migrations/phinx/ruleset.xml ./database/migrations"
        ],
        "fixlint": [
            "phpcbf --standard=src/ruleset.xml --ignore=./resources/lang/*,./bootstrap/cache/* ./",
            "phpcbf --standard=tests/spec/ruleset.xml ./tests/spec/",
            "phpcbf --standard=database/migrations/phinx/ruleset.xml ./database/migrations"
        ],
        "pre-coverage": [
            "rm -rf coverage/"
        ],
        "coverage": [
            "phpunit",
            "phpspec run --no-code-generation"
        ],
        "migrate": [
            "@verify",
            "@php artisan phinx:migrate"
        ],
        "pre-test": [
            "@migrate",
            "@php artisan passport:keys",
            "chmod 660 storage/passport/*.key"
        ],
        "pre-push-test": [
            "phpunit --no-coverage",
            "behat --strict"
        ],
        "behat": "behat --strict",
        "test": [
            "phpunit --no-coverage",
            "phpspec run --no-code-generation",
            "behat --strict --profile ci"
        ],
        "test-dev": [
            "@putenv XDEBUG_MODE=coverage",
            "phpunit --stop-on-failure",
            "phpspec run",
            "behat --strict"
        ],
        "bootstrap:passport": [
            "@php artisan passport:keys",
            "chmod 660 storage/passport/*.key"
        ],
        "verify": [
            "php artisan environment:verify"
        ],
        "installdebug:enable": [
            "\\App\\PlatformVerifier\\DebugMode::enable"
        ],
        "installdebug:disable": [
            "\\App\\PlatformVerifier\\DebugMode::disable"
        ],
        "snowboard-v3-serve": [
            "snowboard http docs/api/index.apib"
        ],
        "snowboard-v5-serve": [
            "snowboard http docs/api/v5/index.apib"
        ]
    },
    "minimum-stability": "dev",
    "prefer-stable": true
}
